def virtual_env_activation = ". /Users/sureshv/PycharmProjects/my_virtual_env/bin/activate" // pip virtual-environment activation command

pipeline {
    agent any

    tools {

        jdk 'Java 18'
    }
    stages {
        stage ('Clone') {
            steps {
                git branch: 'master', url: "https://github.com/sureshvenkatesan/project-examples.git"
            }
        }

        stage ('Configuration') {
            steps {
                rtServer (
                    id: "ARTIFACTORY_SERVER",
                    url: SERVER_URL,
                    credentialsId: CREDENTIALS
                )

                rtPipResolver (
                    id: "PIP_RESOLVER",
                    serverId: "ARTIFACTORY_SERVER",
                    repo: "proj1-pypi-virtual"
                )
            }
        }

        stage ('Pip install') {
            steps {
                rtPipInstall (
                    resolverId: "PIP_RESOLVER",
                    args: "-r python-example/pip-example/requirements.txt",
                    envActivation: virtual_env_activation
                )
            }
        }

        stage ('Package and create distribution archives') {
            steps {
                sh '''
                    $virtual_env_activation
                    cd python-example/pip-example
                    python setup.py sdist bdist_wheel
                '''
            }
        }

        stage ('Upload packages') {
            steps {
                rtUpload (
                    serverId: "ARTIFACTORY_SERVER",
                    spec: '''{
                        "files": [
                            {
                                "pattern": "python-example/pip-example/dist/",
                                "target": "proj1-pypi-virtual/"
                            }
                        ]
                    }''',
                    project: "proj1"
                )
            }
        }

        stage ('Publish build info') {
            steps {
                rtPublishBuildInfo (
                    serverId: "ARTIFACTORY_SERVER",
                    project: "proj1"
                )
            }
        }
        
        stage ('Xray scan') {
            steps {
                xrayScan (
                    serverId: "ARTIFACTORY_SERVER",
                    project: "proj1",
                    failBuild: false
                )
            }
        }
        
    }
}
